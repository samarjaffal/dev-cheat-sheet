---
const { technology } = Astro.props;
const { title, description, properties } = technology;
---

<article class="border border-gray-300 rounded-xl max-w-lg p-6 h-min overflow-hidden break-inside-avoid">
	<header>
		<h3 class="text-2xl font-extrabold text-[#ff70a6]">{title}</h3>
		<div class=""></div>
		<p class="text-base text-gray-700">{description}</p>
	</header>
	<hr class="color-gray-200 my-4" />
	<div class="content">
		{
			properties.map((property) => {
				return (
					<div class="my-3">
						<button class="button-property bg-[#EDEDEE] hover:bg-[#ff70a64D] p-2 rounded-xl w-full text-left transition ease-in-out duration-300">
							<p class="font-semibold text-md">{property.name}</p>
						</button>
						<div class="content hidden bg-[#EDEDEE] p-3 rounded-xl mt-3">
							<p class="text-base text-gray-700 my-2">{property.description}</p>
							<p class="font-semibold text-md mb-2">Usage</p>
							<div class="bg-gray-200 rounded-md p-4">
								<code class="text-sm break-words">{property.usage}</code>
							</div>
						</div>
					</div>
				);
			})
		}
	</div>
</article>

<script>
	function handleClick() {
		const button = this;
		const colorDefault = '#EDEDEE';
		const colorActive = '#ff70a64D';

		button.classList.toggle(`bg-[${colorDefault}]`);
		button.classList.toggle(`bg-[${colorActive}]`);

		const content = button.nextElementSibling;
		content.classList.toggle('hidden');
	}

	const buttons = document.querySelectorAll('button.button-property');

	buttons.forEach((button) => button.addEventListener('click', handleClick));
</script>
